$grid-columns:      12 !default;
$grid-gutter-width: 15px !default;
$grid-outer-margin: 30px !default;

$grid-breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
) !default;

$grid-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
) !default;

$gutter-compensation: $grid-gutter-width * 0.5 * -1;
$half-gutter-width:   $grid-gutter-width * 0.5;


// common styles
@at-root {
  @-ms-viewport { width: device-width; }
}

html {
  box-sizing: border-box;
  -ms-overflow-style: scrollbar;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}


// container
%container {
  margin-right: auto;
  margin-left:  auto;
  width:     calc(100% - #{$grid-gutter-width});
  max-width: calc(100% - #{$grid-gutter-width});
}

%container-fluid {
  width: 100%;
  margin-right: auto;
  margin-left:  auto;
  padding-right: $grid-outer-margin;
  padding-left:  $grid-outer-margin;
}


// row
%row {
  display: flex;
  flex-wrap: wrap;
  margin-right: $gutter-compensation;
  margin-left:  $gutter-compensation;
}


// col
%col-base {
  position: relative;
  width: 100%;
  min-height: 1px;
  padding-right: $half-gutter-width;
  padding-left:  $half-gutter-width;
}

@function breakpoint-infix($breakpoint-name) {
  @return if($breakpoint-name == none, '', -#{$breakpoint-name});
}

@mixin _generate-col-base($breakpoint-name: none) {
  $infix: breakpoint-infix($breakpoint-name);

  %col#{$infix},
  %col#{$infix}-auto {
    @extend %col-base;
  }

  @for $i from 1 through $grid-columns {
    %col#{$infix}-#{$i} {
      @extend %col-base;
    }
  }

  @for $i from 0 through $grid-columns {
    %offset#{$infix}-#{$i} {
      @extend %col-base;
    }
  }
}

@include _generate-col-base;

@each $breakpoint-name in map-keys($grid-breakpoints) {
  @include _generate-col-base($breakpoint-name);
}

@mixin _generate-breakpoint($breakpoint-name: none) {
  $infix: breakpoint-infix($breakpoint-name);

  %col#{$infix} {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
  }

  %col#{$infix}-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }

  @for $i from 1 through $grid-columns {
    %col#{$infix}-#{$i} {
      flex-basis: 100% / $grid-columns * $i;
      max-width:  100% / $grid-columns * $i;
    }
  }

  @for $i from 1 through $grid-columns {
    %order#{$infix}-#{$i} {
      order: $i;
    }
  }

  %flex#{$infix}-row            { flex-direction: row !important; }
  %flex#{$infix}-column         { flex-direction: column !important; }
  %flex#{$infix}-row-reverse    { flex-direction: row-reverse !important; }
  %flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }

  %flex#{$infix}-wrap         { flex-wrap: wrap !important; }
  %flex#{$infix}-nowrap       { flex-wrap: nowrap !important; }
  %flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }

  %justify-content#{$infix}-start   { justify-content: flex-start !important; }
  %justify-content#{$infix}-end     { justify-content: flex-end !important; }
  %justify-content#{$infix}-center  { justify-content: center !important; }
  %justify-content#{$infix}-between { justify-content: space-between !important; }
  %justify-content#{$infix}-around  { justify-content: space-around !important; }

  %align-items#{$infix}-start    { align-items: flex-start !important; }
  %align-items#{$infix}-end      { align-items: flex-end !important; }
  %align-items#{$infix}-center   { align-items: center !important; }
  %align-items#{$infix}-baseline { align-items: baseline !important; }
  %align-items#{$infix}-stretch  { align-items: stretch !important; }

  %align-content#{$infix}-start   { align-content: flex-start !important; }
  %align-content#{$infix}-end     { align-content: flex-end !important; }
  %align-content#{$infix}-center  { align-content: center !important; }
  %align-content#{$infix}-between { align-content: space-between !important; }
  %align-content#{$infix}-around  { align-content: space-around !important; }
  %align-content#{$infix}-stretch { align-content: stretch !important; }

  %align-self#{$infix}-auto     { align-self: auto !important; }
  %align-self#{$infix}-start    { align-self: flex-start !important; }
  %align-self#{$infix}-end      { align-self: flex-end !important; }
  %align-self#{$infix}-center   { align-self: center !important; }
  %align-self#{$infix}-baseline { align-self: baseline !important; }
  %align-self#{$infix}-stretch  { align-self: stretch !important; }
}

@include _generate-breakpoint;

@each $breakpoint-name in map-keys($grid-breakpoints) {
  $breackpoint-min-width: map-get($grid-breakpoints, $breakpoint-name);
  $container-max-width:   map-get($grid-max-widths,  $breakpoint-name);

  @media (min-width: $breackpoint-min-width) {
    %container {
      width: $container-max-width;
    }

    @include _generate-breakpoint($breakpoint-name);
  }
}
